{"version":3,"sources":["components/Visualization.tsx","contexts/session.ts","components/LoginPrompt.tsx","components/Login.tsx","helpers/draw.ts","simulation/index.ts","components/PersonCard.tsx","components/Search.tsx","data/BFSFriends.ts","components/DataContainer.tsx","components/VisualizationContainer.tsx","components/PeopleList.tsx","components/About.tsx","components/Layout.tsx","App.tsx","reportWebVitals.ts","components/SessionProvider.tsx","index.tsx"],"names":["old","SessionContext","createContext","LoginPrompt","onLogin","props","useState","promptOpen","setPromptOpen","localStorage","getItem","idp","setIdp","isOpen","onRequestClose","contentLabel","overlayClassName","base","afterOpen","beforeClose","className","closeTimeoutMS","onClick","onSubmit","e","preventDefault","setItem","id","type","value","onChange","newValue","currentTarget","placeholder","Login","loading","setLoading","useContext","info","setInfo","useEffect","handleIncomingRedirect","url","window","location","href","restorePreviousSession","then","newInfo","catch","console","log","finally","handleLogin","oidcIssuer","a","login","redirectUrl","clientName","alert","removeItem","handleLogout","logout","commonProps","disabled","isLoggedIn","webId","drawText","context","text","options","x","y","font","textBaseline","textAlign","Object","assign","fillText","drawCircle","radius","beginPath","arc","Math","PI","fill","drawLine","start","end","moveTo","lineTo","stroke","Visualization","graph","grid","onTransform","onHover","onSelectNode","canvasEl","useRef","width","height","setVisualizationSize","current","getContext","offset","save","translate","clearRect","strokeStyle","min1","max1","min0","max0","getLineWidth","i","highlight","distance","origin","lineWidth","drawGrid","links","forEach","link","s","source","t","target","v","numeric","sub","size","sqrt","div","add","mul","r","focusedColor","accented","nodes","filter","style","focused","successed","errored","fillStyle","label","restore","updateCanvasSize","elementRef","clientHeight","clientWidth","getElementSize","addEventListener","removeEventListener","select","call","drag","clickDistance","on","dx","dy","zoom","scaleExtent","transform","k","dot","inv","withCanvasPosition","func","rect","getBoundingClientRect","clientX","left","clientY","top","handleMouseMove","handleClick","ref","onMouseMove","onMouseOut","Infinity","classnames","Simulation","runs","simulation","forceSimulation","alphaDecay","force","forceLink","node","uri","strength","forceManyBody","distanceMax","forceX","forceY","forceCollide","forceCenter","stop","onTick","map","restart","update","thisNodeDict","fromEntries","updatedNodes","random","alpha","selectNode","find","PersonCard","person","knows","known","onSelectPerson","overflowWrap","name","status","photo","src","alt","length","friend","Search","onSelect","title","limiter","RateLimiter","tokensPerInterval","interval","fetchWithTimeout","timeout","resource","controller","AbortController","setTimeout","abort","fetch","signal","response","clearTimeout","limitedFetch","removeTokens","findFullPersonProfile","visited","Set","fail","iri","getSolidDataset","dataset","getThing","push","same","getTermAll","owl","sameAs","see","rdfs","seeAlso","has","findFriends","data","friends","reduce","d","foaf","concat","indexOf","getTerm","vcard","fn","hasPhoto","img","fixUri","match","begin","BFSFriends","initial","running","people","values","includes","unvisitedPersons","Promise","all","unvisitedPerson","unvisited","newlyFoundFriends","keys","PeopleContext","DataContainer","children","setPeople","timbl","me","Provider","matrix","vector","raw","transpose","InfoContainer","position","bottom","pointerEvents","overflowY","overflowX","marginTop","basicGrid","nodeRadius","count","withRouter","history","layout","setLayout","search","setSearch","highlightedNode","setHighlightedNode","setMatrix","lastUpdate","Date","now","withNode","action","handleHover","encodeURIComponent","pathname","handleSelect","selectedNode","decodeURIComponent","slice","selectedNodeDependencies","selectedNodeUri","selectNodeDependencies","transformedLayout","highlighted","selected","selectedDependencies","transformedNodesDict","sourceUri","targetUri","transformLayout","transformGrid","f","prevMatrix","Helmet","selectSearchOptions","query","toLowerCase","sort","b","PeopleList","Array","from","flat","Link","styled","Footer","footer","About","PositionedLogin","PositionedAbout","PositionedPeopleList","FullSizeVisualization","VisualizationContainer","Layout","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SessionProvider","sessionInfo","setSessionInfo","document","appElement","querySelector","Modal","setAppElement","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.de18108a.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport {\n  Vector,\n  Grid,\n  drawGrid,\n  drawCircle,\n  drawLine,\n  drawText,\n} from '../helpers/draw'\nimport classnames from 'classnames'\nimport { drag } from 'd3-drag'\nimport { zoom } from 'd3-zoom'\nimport { select } from 'd3-selection'\nimport numeric from 'numeric'\nimport { VisualizationGraph } from './VisualizationContainer'\n\ntype Props = Partial<React.CanvasHTMLAttributes<HTMLCanvasElement>> & {\n  graph: VisualizationGraph\n  grid: Grid\n  onTransform: (matrix: number[][]) => void\n  onHover: (position: Vector) => void\n  onSelectNode: (position: Vector) => void\n}\n\nlet old: number[][]\n\nconst Visualization: React.FC<Props> = ({\n  graph,\n  grid,\n  onTransform,\n  onHover,\n  onSelectNode,\n  ...props\n}: Props) => {\n  const canvasEl = useRef<HTMLCanvasElement>(null)\n  const [{ width, height }, setVisualizationSize] = useState({\n    width: 0,\n    height: 0,\n  })\n\n  useEffect(() => {\n    if (canvasEl && canvasEl.current) {\n      const context = canvasEl.current.getContext('2d')\n      if (context) {\n        const offset: Vector = [width / 2, height / 2]\n        context.save()\n        context.translate(...offset)\n        context.clearRect(-offset[0], -offset[1], width, height)\n        drawGrid(context, grid, width, height, offset)\n        graph.links.forEach(link => {\n          // we're counting a unit vector to make links that don't overlap nodes\n          // source point\n          const s = [link.source.x, link.source.y]\n          // target point\n          const t = [link.target.x, link.target.y]\n          // vector\n          const v = numeric.sub(t, s)\n          // vector size\n          const size = Math.sqrt(v[0] ** 2 + v[1] ** 2)\n          // unit vector\n          const i = numeric.div(v, size)\n          drawLine(\n            context,\n            // links don't overlap circles\n            numeric.add(s, numeric.mul(i, link.source.r)) as Vector,\n            numeric.sub(t, numeric.mul(i, link.target.r)) as Vector,\n            {\n              strokeStyle: 'white',\n              lineWidth: 0.5,\n            },\n          )\n        })\n\n        const accentedColor = '#78a2ccaa' // '#ff5d'\n        const focusedColor = '#78a2cc'\n        const successedColor = '#7d7a'\n        const erroredColor = '#ff6961aa'\n        const accented = graph.nodes.filter(({ style }) => style === 'accent')\n        const focused = graph.nodes.filter(({ style }) => style === 'focus')\n        const successed = graph.nodes.filter(({ style }) => style === 'success')\n        const errored = graph.nodes.filter(({ style }) => style === 'error')\n        const rest = graph.nodes.filter(({ style }) => !style)\n\n        // draw all the nodes which are not special\n        rest.forEach(({ x, y, r }) =>\n          drawCircle(context, [x, y], r, { fillStyle: '#fff8' }),\n        )\n\n        // draw errored nodes\n        errored.forEach(({ x, y, r }) =>\n          drawCircle(context, [x, y], r, { fillStyle: erroredColor }),\n        )\n\n        // draw successed nodes\n        successed.forEach(({ x, y, r }) =>\n          drawCircle(context, [x, y], r, { fillStyle: successedColor }),\n        )\n\n        /*\n        // draw text of all the above nodes\n        ;[...errored, ...successed, ...rest].forEach(({ x, y, r, label }) =>\n          drawText(context, [x + r + 5, y], label, { fillStyle: '#fff4' }),\n        )\n        */\n\n        // draw accented nodes\n        accented.forEach(({ x, y, r }) =>\n          drawCircle(context, [x, y], r, { fillStyle: accentedColor }),\n        )\n\n        accented.forEach(({ x, y, r, label }) =>\n          drawText(context, [x + r + 5, y], label, {\n            fillStyle: '#fff4',\n          }),\n        )\n\n        // draw focused nodes\n        focused.forEach(({ x, y, r }) =>\n          drawCircle(context, [x, y], r, { fillStyle: focusedColor }),\n        )\n\n        focused.forEach(({ x, y, r, label }) =>\n          drawText(context, [x + r + 5, y], label, { fillStyle: focusedColor }),\n        )\n\n        return () => context.restore()\n      }\n    }\n  }, [width, height, graph, canvasEl, grid])\n\n  useEffect(() => {\n    const updateCanvasSize = () => {\n      if (canvasEl && canvasEl.current) {\n        const size = getElementSize(canvasEl)\n        setVisualizationSize(size)\n      }\n    }\n\n    updateCanvasSize()\n    window.addEventListener('load', updateCanvasSize)\n    window.addEventListener('resize', updateCanvasSize)\n\n    return () => {\n      window.removeEventListener('resize', updateCanvasSize)\n      window.removeEventListener('load', updateCanvasSize)\n    }\n  }, [width, height, canvasEl])\n\n  useEffect(() => {\n    if (canvasEl && canvasEl.current) {\n      select(canvasEl.current).call(\n        drag<HTMLCanvasElement, unknown>()\n          .clickDistance(2)\n          //.on('start', console.log)\n          .on('drag', e => {\n            onTransform([\n              [1, 0, e.dx],\n              [0, 1, e.dy],\n              [0, 0, 1],\n            ])\n          }),\n        //.on('end', console.log),\n      )\n\n      select(canvasEl.current).call(\n        zoom<HTMLCanvasElement, unknown>()\n          .clickDistance(2)\n          .scaleExtent([0.05, 3])\n          .on('zoom', e => {\n            old = old ?? [\n              [1, 0, -width / 2],\n              [0, 1, -height / 2],\n              [0, 0, 1],\n            ]\n            const { x, y, k } = e.transform\n\n            const zoom = [\n              [k, 0, x - width / 2],\n              [0, k, y - height / 2],\n              [0, 0, 1],\n            ]\n\n            const transform = numeric.dot(zoom, numeric.inv(old)) as number[][]\n            old = zoom\n\n            onTransform(transform)\n          }),\n      )\n    }\n  }, [canvasEl, onTransform, height, width])\n\n  const withCanvasPosition =\n    (\n      func: (position: Vector) => void,\n    ): React.MouseEventHandler<HTMLCanvasElement> =>\n    e => {\n      // https://stackoverflow.com/a/42111623\n      if (canvasEl && canvasEl.current) {\n        const rect = canvasEl.current.getBoundingClientRect()\n        const x = e.clientX - rect.left //x position within the element.\n        const y = e.clientY - rect.top //y position within the element.\n        func([x - width / 2, y - height / 2])\n      }\n    }\n\n  const handleMouseMove = withCanvasPosition(onHover)\n  const handleClick = withCanvasPosition(onSelectNode)\n\n  return (\n    <canvas\n      {...props}\n      ref={canvasEl}\n      onMouseMove={handleMouseMove}\n      // @TODO this piece is very inefficient, we search for a nonexistent node, just to unhighlight everything; but it works\n      onMouseOut={() => onHover([Infinity, Infinity])}\n      width={width}\n      height={height}\n      className={classnames(props.className, 'has-background-dark')}\n      onClick={handleClick}\n    />\n  )\n}\n\nexport default Visualization\n\nfunction getElementSize(elementRef: React.RefObject<HTMLCanvasElement>) {\n  if (elementRef && elementRef.current) {\n    const { clientHeight: height, clientWidth: width } = elementRef.current\n    return { height, width }\n  } else return { height: 0, width: 0 }\n}\n","import { ISessionInfo } from '@inrupt/solid-client-authn-browser'\nimport React, { createContext } from 'react'\n\nexport type SessionInfo = Required<ISessionInfo>\nexport const SessionContext = createContext<\n  [SessionInfo | null, React.Dispatch<React.SetStateAction<SessionInfo | null>>]\n>([\n  null,\n  () => {\n    return\n  },\n])\n","import React, { useState } from 'react'\nimport Modal from 'react-modal'\n\ninterface Props {\n  onLogin: (oidcIssuer: string) => void\n}\n\nconst LoginPrompt: React.FC<Props> = ({ onLogin, ...props }: Props) => {\n  const [promptOpen, setPromptOpen] = useState(false)\n  const [idp, setIdp] = useState(\n    localStorage.getItem('idp') ?? 'https://solidcommunity.net',\n  )\n\n  const onSubmit: React.FormEventHandler = e => {\n    e.preventDefault()\n    localStorage.setItem('idp', idp)\n    onLogin(idp)\n  }\n\n  const onChangeInput = (e: React.FormEvent<HTMLInputElement>) => {\n    e.preventDefault()\n    const newValue = e.currentTarget.value\n    setIdp(newValue)\n  }\n\n  if (!promptOpen) {\n    return (\n      <>\n        <button\n          {...props}\n          onClick={e => {\n            e.preventDefault()\n            setPromptOpen(true)\n          }}\n        >\n          Login\n        </button>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Modal\n        isOpen={promptOpen}\n        onRequestClose={() => setPromptOpen(false)}\n        contentLabel=\"Connect your Solid Pod\"\n        overlayClassName={{\n          base: 'modal modal-background is-active',\n          afterOpen: '',\n          beforeClose: '',\n        }}\n        className={{\n          base: 'modal-content',\n          afterOpen: '',\n          beforeClose: '',\n        }}\n        closeTimeoutMS={50}\n      >\n        <button className=\"modal-close\" onClick={() => setPromptOpen(false)}>\n          close\n        </button>\n\n        <div className=\"card\">\n          <header className=\"card-header\">\n            <p className=\"card-header-title\">\n              Select your Solid identity provider\n            </p>\n          </header>\n          <div className=\"card-content\">\n            <form onSubmit={onSubmit}>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input\n                    id=\"idp\"\n                    className=\"input\"\n                    type=\"url\"\n                    value={idp}\n                    onChange={onChangeInput}\n                    placeholder=\"Where is your Solid Pod?\"\n                  />\n                </div>\n              </div>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input\n                    type=\"submit\"\n                    value=\"Connect\"\n                    className=\"button is-link\"\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </Modal>\n    </>\n  )\n}\n\nexport default LoginPrompt\n","import React, { useState, useEffect, useContext } from 'react'\nimport {\n  login,\n  logout,\n  handleIncomingRedirect,\n} from '@inrupt/solid-client-authn-browser'\nimport { SessionContext, SessionInfo } from '../contexts/session'\nimport LoginPrompt from './LoginPrompt'\n\ninterface Props {\n  className?: string\n}\n\nconst Login: React.FC<Props> = (\n  { className, ...props }: Props = { className: '' },\n) => {\n  const [loading, setLoading] = useState(true)\n  const [info, setInfo] = useContext(SessionContext)\n  useEffect(() => {\n    setLoading(true)\n    handleIncomingRedirect({\n      url: window.location.href,\n      restorePreviousSession: true,\n    })\n      .then(newInfo => {\n        if (newInfo) setInfo(newInfo as SessionInfo)\n      })\n      .catch(e => {\n        console.log(e)\n        setInfo(null)\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [setInfo])\n\n  const handleLogin = async (oidcIssuer: string) => {\n    setLoading(true)\n    try {\n      await login({\n        oidcIssuer,\n        redirectUrl: window.location.href,\n        clientName: 'Friends Crawler',\n      })\n    } catch (error) {\n      alert(`Could not find a Solid Pod at ${oidcIssuer}`)\n      localStorage.removeItem('idp')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleLogout = async () => {\n    setLoading(true)\n    await logout()\n    if (setInfo) setInfo(null)\n    setLoading(false)\n  }\n\n  const commonProps = {\n    ...props,\n    className: `${className} button`,\n  }\n\n  return loading ? (\n    <button {...commonProps} disabled>\n      Loading\n    </button>\n  ) : info?.isLoggedIn ? (\n    <button {...commonProps} onClick={handleLogout}>\n      {info?.webId} Logout\n    </button>\n  ) : (\n    <LoginPrompt {...commonProps} onLogin={handleLogin} />\n  )\n}\n\nexport default Login\n","export type Vector = [number, number]\n\nexport type Grid = {\n  origin: Vector // coordinate of the origin\n  distance: number // distance between lines\n  highlight: number // which lines should be highlighted\n}\n\ntype Options = Partial<CanvasRenderingContext2D>\n\nexport const drawText = (\n  context: CanvasRenderingContext2D,\n  [x, y]: Vector,\n  text: string,\n  options: Options,\n) => {\n  context.font = '20px Arial'\n  context.textBaseline = 'middle'\n  context.textAlign = 'left'\n  // context.fillStyle = '#fff7'\n  Object.assign(context, options)\n  context.fillText(text, x, y)\n}\n\nexport const drawCircle = (\n  context: CanvasRenderingContext2D,\n  [x, y]: Vector,\n  radius: number,\n  options: Options,\n) => {\n  Object.assign(context, options)\n  context.beginPath()\n  context.arc(x, y, radius, 0, 2 * Math.PI)\n  context.fill()\n}\n\nexport const drawLine = (\n  context: CanvasRenderingContext2D,\n  start: Vector,\n  end: Vector,\n  options: Options,\n) => {\n  Object.assign(context, options)\n\n  context.beginPath()\n  context.moveTo(...start)\n  context.lineTo(...end)\n  context.stroke()\n}\n\nexport const drawGrid = (\n  context: CanvasRenderingContext2D,\n  grid: Grid,\n  width: number,\n  height: number,\n  offset: Vector = [0, 0],\n) => {\n  const strokeStyle = '#fff2'\n  const min1 = -offset[1]\n  const max1 = height - offset[1]\n  const min0 = -offset[0]\n  const max0 = width - offset[0]\n\n  const getLineWidth = (i: number) =>\n    i === 0 ? 2 : i % grid.highlight === 0 ? 1 : 0.5\n\n  let i = 0\n  while (i * grid.distance + grid.origin[0] <= max0) {\n    const x = i * grid.distance + grid.origin[0]\n    if (x >= min0) {\n      drawLine(context, [x, min1], [x, max1], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i++\n  }\n\n  i = -1\n  while (i * grid.distance + grid.origin[0] >= min0) {\n    const x = i * grid.distance + grid.origin[0]\n    if (x <= max0) {\n      drawLine(context, [x, min1], [x, max1], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i--\n  }\n\n  i = 0\n  while (i * grid.distance + grid.origin[1] <= max1) {\n    const y = i * grid.distance + grid.origin[1]\n    if (y >= min1) {\n      drawLine(context, [min0, y], [max0, y], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i++\n  }\n\n  i = -1\n  while (i * grid.distance + grid.origin[1] >= min1) {\n    const y = i * grid.distance + grid.origin[1]\n    if (y <= max1) {\n      drawLine(context, [min0, y], [max0, y], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i--\n  }\n}\n","import {\n  forceSimulation,\n  forceCollide,\n  forceLink,\n  forceManyBody,\n  forceCenter,\n  forceX,\n  forceY,\n  SimulationNodeDatum,\n  SimulationLinkDatum,\n  ForceLink,\n} from 'd3-force'\nimport { Coords, Uri, SimulationNode, SimulationLink, Node } from './types'\n\ninterface SimulationNodeExt extends SimulationNodeDatum {\n  uri: Uri\n  r: number\n}\n\nexport type SimulationLinkExt = SimulationLinkDatum<SimulationNodeExt>\n\nexport default class Simulation {\n  nodes: SimulationNodeExt[] = []\n  links: SimulationLinkExt[] = []\n\n  runs = false\n\n  simulation = forceSimulation()\n    .alphaDecay(0.005)\n    .force(\n      'link',\n      forceLink()\n        .id(node => (node as SimulationNodeExt).uri)\n        .distance(50)\n        .strength(0.1),\n    )\n    .force('charge', forceManyBody().strength(-150).distanceMax(500))\n    .force('gravityX', forceX(0).strength(0.01))\n    .force('gravityY', forceY(0).strength(0.01))\n    .force(\n      'collide',\n      forceCollide(({ r }: SimulationNodeExt) => r + 5),\n    )\n    .force('center', forceCenter(0, 0))\n    .stop()\n\n  start = ({\n    nodes,\n    links,\n    onTick,\n  }: {\n    nodes: SimulationNode[]\n    links: SimulationLink[]\n    onTick: (simulation: {\n      nodes: SimulationNode[]\n      links: SimulationLinkExt[]\n    }) => void\n  }) => {\n    this.nodes = nodes as SimulationNodeExt[]\n    this.links = links.map(link => ({ ...link })) as SimulationLinkExt[]\n\n    this.simulation.nodes(this.nodes)\n    ;(\n      this.simulation.force('link') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n\n    this.simulation.on('tick', () => {\n      onTick({\n        nodes: this.nodes as SimulationNode[],\n        links: this.links,\n      })\n    })\n\n    this.simulation.restart()\n    this.runs = true\n  }\n\n  stop = () => {\n    this.runs = false\n    return this.simulation.stop()\n  }\n\n  update = ({ nodes, links }: { nodes: Node[]; links: SimulationLink[] }) => {\n    this.simulation.stop()\n    // combine current nodes and the old nodes\n    const thisNodeDict: { [uri: string]: SimulationNodeExt } =\n      Object.fromEntries(this.nodes.map(node => [node.uri, node]))\n    const updatedNodes: SimulationNodeExt[] = nodes.map(node => ({\n      ...node,\n      x: (0.5 - Math.random()) * 800,\n      y: (0.5 - Math.random()) * 800,\n      ...thisNodeDict[node.uri],\n      r: node.r,\n    }))\n    this.nodes = updatedNodes\n    this.links = links.map(link => ({ ...link })) as SimulationLinkExt[]\n\n    this.simulation.nodes(this.nodes)\n    ;(\n      this.simulation.force('link') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n\n    this.simulation.alpha(1).restart()\n  }\n\n  selectNode = ({ x, y }: Coords) =>\n    this.simulation.find(x, y, 40) as SimulationNodeExt\n}\n","import React from 'react'\nimport { Person } from './DataContainer'\n\ninterface Props {\n  person: Person\n  knows: Person[]\n  known: Person[]\n  onSelectPerson: (uri: string) => void\n}\n\nconst PersonCard = ({ person, knows, known, onSelectPerson }: Props) => {\n  return (\n    <div className=\"card\">\n      <header className=\"card-header\">\n        <p className=\"card-header-title\" style={{ overflowWrap: 'anywhere' }}>\n          <span>\n            <a href={person.uri}>{person.name || person.uri}</a>{' '}\n            <span\n              className={`tag is-${\n                person.status === 'success'\n                  ? 'success'\n                  : person.status === 'error'\n                  ? 'danger'\n                  : 'light'\n              }`}\n            >\n              {person.status}\n            </span>\n          </span>\n        </p>\n        <span className=\"card-header-icon\">\n          <button\n            className=\"delete\"\n            aria-label=\"close\"\n            onClick={() => onSelectPerson('')}\n          >\n            close\n          </button>\n        </span>\n      </header>\n      {person.photo && (\n        <div className=\"card-image\">\n          <figure className=\"image\">\n            <img src={person.photo} alt={person.name} />\n          </figure>\n        </div>\n      )}\n      <header className=\"card-header\">\n        <p className=\"card-header-title\">knows: {knows.length}</p>\n      </header>\n      <section className=\"card-content\">\n        <ul className=\"buttons are-small\">\n          {knows.map(friend => (\n            <li\n              onClick={() => onSelectPerson(friend.uri)}\n              key={friend.uri}\n              className=\"button is-link\"\n            >\n              {friend.name}\n            </li>\n          ))}\n        </ul>\n      </section>\n      <header className=\"card-header\">\n        <p className=\"card-header-title\">known by: {known.length}</p>\n      </header>\n      <section className=\"card-content\">\n        <ul className=\"buttons are-small\">\n          {known.map(friend => (\n            <li\n              onClick={() => onSelectPerson(friend.uri)}\n              key={friend.uri}\n              className=\"button is-link\"\n            >\n              {friend.name}\n            </li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  )\n}\n\nexport default PersonCard\n","import React from 'react'\n\ninterface Props {\n  onChange: (text: string) => void\n  onSelect: (text: string) => void\n  value: string\n  options: { value: string; label: string }[]\n}\n\nconst Search: React.FC<Props> = ({\n  onChange,\n  onSelect,\n  value,\n  options,\n  ...props\n}: Props) => (\n  <div {...props} className=\"box p-0\">\n    <input\n      type=\"text\"\n      className=\"input\"\n      placeholder=\"Search\"\n      value={value}\n      onChange={e => onChange(e.target.value)}\n    />\n    <div className=\"menu\">\n      <ul className=\"menu-list\">\n        {options.map(({ value, label }) => (\n          <li key={value} title={value}>\n            <a onClick={() => onSelect(value)}>{label}</a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n)\n\nexport default Search\n","import { fetch } from '@inrupt/solid-client-authn-browser'\nimport {\n  getSolidDataset,\n  getTerm,\n  getThing,\n  getTermAll,\n  IriString,\n  SolidDataset,\n} from '@inrupt/solid-client'\nimport { foaf, vcard, owl, rdfs } from 'rdf-namespaces'\nimport { Person } from '../components/DataContainer'\nimport { RateLimiter } from 'limiter'\n\nconst limiter = new RateLimiter({ tokensPerInterval: 1, interval: 50 })\n\n/**\n * https://dmitripavlutin.com/timeout-fetch-request/#2-timeout-a-fetch-request\n */\nconst fetchWithTimeout: (timeout: number) => typeof fetch =\n  (timeout: number) => async (resource, options) => {\n    const controller = new AbortController()\n    const id = setTimeout(() => controller.abort(), timeout)\n\n    const response = await fetch(resource, {\n      ...options,\n      signal: controller.signal,\n    })\n    clearTimeout(id)\n\n    return response\n  }\n\nconst limitedFetch: typeof fetch = async (...props) => {\n  await limiter.removeTokens(1)\n  return await fetchWithTimeout(8000)(...props)\n}\n\ninterface PersonData {\n  name: string\n  friends: IriString[]\n  photo: IriString\n}\n\n/**\n * Fetch all profile documents connected to the webId by owl:sameAs or rdfs.seeAlso\n */\nconst findFullPersonProfile = async (\n  webId: IriString,\n  visited = new Set<IriString>(),\n  response: SolidDataset[] = [],\n  fail = true,\n  iri = webId,\n): Promise<SolidDataset[]> => {\n  try {\n    /* uncomment if it is annoying when the below profile blocks\n    if (webId === 'https://ruben.verborgh.org/profile/#me') {\n      throw new Error('a blocking profile')\n    }\n    // */\n    visited.add(iri)\n    const dataset = await getSolidDataset(iri, { fetch: limitedFetch })\n    const person = getThing(dataset, webId)\n    if (person) {\n      response.push(dataset)\n      const same: string[] = getTermAll(person, owl.sameAs).map(a => a.value)\n      const see: string[] = getTermAll(person, rdfs.seeAlso).map(a => a.value)\n\n      for (const uri of [...same, ...see]) {\n        console.log('extending', uri)\n        if (!visited.has(uri))\n          await findFullPersonProfile(webId, visited, response, false, uri)\n      }\n    }\n  } catch (e) {\n    if (fail) throw e\n  }\n  return response\n}\n\nexport const findFriends = async (webId: IriString): Promise<PersonData> => {\n  const data: PersonData = { name: '', photo: '', friends: [] }\n  if (webId) {\n    const dataset = await findFullPersonProfile(webId)\n    dataset.reduce((data, d) => {\n      const person = getThing(d, webId)\n      if (person) {\n        const friends = getTermAll(person, foaf.knows).map(a => a.value)\n        data.friends = data.friends\n          .concat(friends)\n          .filter((a, i, data) => data.indexOf(a) === i)\n        if (!data.name)\n          data.name =\n            getTerm(person, foaf.name)?.value ??\n            getTerm(person, vcard.fn)?.value ??\n            ''\n        if (!data.photo)\n          data.photo =\n            getTerm(person, vcard.hasPhoto)?.value ??\n            getTerm(person, foaf.img)?.value ??\n            ''\n      }\n      return data\n    }, data)\n    return data\n  }\n\n  return data\n}\n\nexport const BFSFriends = (\n  initial: Person[],\n  onChange: (people: { [uri: string]: Person }) => void,\n): (() => void) => {\n  console.log('start crawling')\n  let running = true\n  let people: { [uri: string]: Person } = Object.fromEntries(\n    initial.map(({ uri, ...person }) => {\n      uri = fixUri(uri)\n      return [uri, { ...person, uri }]\n    }),\n  )\n  onChange(people)\n  ;(async () => {\n    while (\n      running &&\n      Object.values(people)\n        .map(person => person.status)\n        .includes('pending')\n    ) {\n      // take all unvisited persons\n      const unvisitedPersons = Object.values(people).filter(\n        person => person.status === 'pending',\n      )\n      if (unvisitedPersons.length > 0) {\n        await Promise.all(\n          unvisitedPersons.map(async unvisitedPerson => {\n            // fetch their friends\n            try {\n              const { name, photo, friends } = await findFriends(\n                unvisitedPerson.uri,\n              )\n              const unvisited: Person = {\n                ...unvisitedPerson,\n                status: 'success',\n                knows: new Set(friends.map(uri => fixUri(uri))),\n                name,\n                photo,\n              }\n\n              // add their friends\n              const newlyFoundFriends = Object.fromEntries(\n                friends\n                  .map(\n                    uri =>\n                      [\n                        fixUri(uri),\n                        {\n                          status: 'pending',\n                          knows: new Set(),\n                          name: '',\n                          uri: fixUri(uri),\n                        } as Person,\n                      ] as [IriString, Person],\n                  )\n                  .filter(([uri]) => !Object.keys(people).includes(uri)),\n              )\n\n              people = {\n                ...people,\n                ...newlyFoundFriends,\n                [unvisited.uri]: unvisited,\n              }\n            } catch (e) {\n              // set their status to error\n              people = {\n                ...people,\n                [unvisitedPerson.uri]: { ...unvisitedPerson, status: 'error' },\n              }\n            } finally {\n              onChange({ ...people })\n            }\n          }),\n        )\n      } else break\n    }\n  })()\n  return () => {\n    console.log('stop crawling')\n    running = false\n  }\n}\n\n/*\nconst getResourceUrl = (url: string): string => {\n  const resourceUrl = new URL(url)\n  resourceUrl.hash = ''\n  return resourceUrl.href\n}\n*/\n\nconst fixUri = (uri: IriString) => {\n  const regex = /^(.+)\\.solid.community(.*)$/\n  const match = uri.match(regex)\n  if (match) {\n    const [, begin, end] = match\n    uri = `${begin}.solidcommunity.net${end}`\n  }\n\n  return uri\n}\nexport default BFSFriends\n","import React, { createContext, useContext, useState, useEffect } from 'react'\nimport { SessionContext } from '../contexts/session'\nimport BFSFriends from '../data/BFSFriends'\nimport { IriString } from '@inrupt/solid-client'\n\nexport const PeopleContext = createContext<{ [uri: string]: Person }>({})\n\ninterface Props {\n  children: React.ReactNode\n}\n\nexport type Person = {\n  uri: IriString\n  name: string\n  photo: string\n  status: 'success' | 'error' | 'pending'\n  knows: Set<IriString>\n  known?: Set<IriString>\n}\n\nconst DataContainer = ({ children }: Props) => {\n  const [info] = useContext(SessionContext)\n  const [people, setPeople] = useState<{ [uri: string]: Person }>({})\n\n  useEffect(() => {\n    // here we lookup people connected to us\n    const timbl: Person = {\n      uri: 'https://timbl.solidcommunity.net/profile/card#me',\n      name: '',\n      photo: '',\n      status: 'pending',\n      knows: new Set(),\n    }\n\n    const me: Person = {\n      uri: info?.webId ?? '',\n      name: '',\n      status: 'pending',\n      knows: new Set(),\n      photo: '',\n    }\n\n    return BFSFriends([timbl, ...(info?.isLoggedIn ? [me] : [])], setPeople)\n  }, [info])\n\n  Object.values(people).forEach(({ uri, knows }) => {\n    knows.forEach(k => {\n      const person = people[k]\n      person.known = person.known ?? new Set()\n      person.known.add(uri)\n    })\n  })\n\n  return (\n    <PeopleContext.Provider value={people}>{children}</PeopleContext.Provider>\n  )\n}\n\nexport default DataContainer\n","import React, { useEffect, useState, useContext } from 'react'\nimport Visualization from './Visualization'\nimport Simulation, { SimulationLinkExt } from '../simulation'\nimport { SimulationNode, SimulationLink } from '../simulation/types'\nimport { Vector } from '../helpers/draw'\nimport { Grid } from '../helpers/draw'\nimport numeric from 'numeric'\nimport PersonCard from './PersonCard'\nimport Search from './Search'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { PeopleContext, Person } from './DataContainer'\nimport { IriString } from '@inrupt/solid-client'\nimport { Helmet } from 'react-helmet'\n\ntype PeopleGraph = {\n  [uri: string]: Person\n}\n\nconst transform = (matrix: number[][], vector: Vector): Vector => {\n  const raw = numeric.dot(\n    matrix,\n    numeric.transpose([[...vector, 1]]),\n  ) as number[][]\n  const [[x], [y]] = raw\n  return [x, y]\n}\n\ninterface ICProps {\n  children: React.ReactNode\n}\nconst InfoContainer = ({ children }: ICProps) => (\n  <div\n    style={{\n      position: 'fixed',\n      width: '100%',\n      top: 0,\n      bottom: 0,\n      pointerEvents: 'none',\n      overflowY: 'auto',\n      overflowX: 'hidden',\n    }}\n  >\n    <div style={{ marginTop: '4rem' }} className=\"columns mr-1 ml-1\">\n      <div className=\"column is-one-quarter is-offset-three-quarters\">\n        <div style={{ pointerEvents: 'all', overflowX: 'auto', width: '100%' }}>\n          {children}\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\ntype VisualizationNode = {\n  x: number\n  y: number\n  uri: string\n  label: string\n  style: string\n  r: number\n}\n\ntype VisualizationLink = {\n  source: VisualizationNode\n  target: VisualizationNode\n}\n\nexport type VisualizationGraph = {\n  nodes: VisualizationNode[]\n  links: VisualizationLink[]\n}\n\ninterface SimulationGraph {\n  nodes: SimulationNode[]\n  links: SimulationLinkExt[]\n}\n\nconst basicGrid: Grid = {\n  origin: [0, 0],\n  distance: 20,\n  highlight: 5,\n}\n\nconst transformGrid = (matrix: number[][], grid: Grid): Grid => {\n  let distance = grid.distance * matrix[0][0]\n  while (distance < 20) {\n    distance *= 5\n  }\n  return {\n    origin: transform(matrix, grid.origin),\n    distance,\n    highlight: grid.highlight,\n  }\n}\n\nconst transformLayout = (\n  matrix: number[][],\n  graph: SimulationGraph,\n  people: PeopleGraph,\n  highlighted: string | undefined,\n  selected: string | undefined,\n  selectedDependencies: string[],\n): VisualizationGraph => {\n  const transformedNodesDict = Object.fromEntries(\n    graph.nodes.map(node => {\n      const [x, y] = transform(matrix, [node.x, node.y])\n      const r = matrix[0][0] * node.r\n      const status = people[node.uri]?.status ?? ''\n      const style =\n        status === 'success' ? 'success' : status === 'error' ? 'error' : ''\n      return [\n        node.uri,\n        {\n          ...node,\n          x,\n          y,\n          r,\n          style,\n          label: people[node.uri]?.name ?? '',\n        },\n      ]\n    }),\n  )\n\n  if (highlighted && transformedNodesDict[highlighted]) {\n    transformedNodesDict[highlighted].style = 'accent'\n  }\n\n  selectedDependencies.forEach(uri => {\n    if (transformedNodesDict[uri]) transformedNodesDict[uri].style = 'accent'\n  })\n\n  if (selected && transformedNodesDict[selected]) {\n    transformedNodesDict[selected].style = 'focus'\n  }\n\n  const links = graph.links.map(link => {\n    const sourceUri =\n      typeof link.source === 'string'\n        ? link.source\n        : typeof link.source === 'number'\n        ? graph.nodes[link.source].uri\n        : link.source.uri\n    const targetUri =\n      typeof link.target === 'string'\n        ? link.target\n        : typeof link.target === 'number'\n        ? graph.nodes[link.target].uri\n        : link.target.uri\n    const source = transformedNodesDict[sourceUri]\n    const target = transformedNodesDict[targetUri]\n    return { source, target }\n  })\n\n  return { nodes: Object.values(transformedNodesDict), links }\n}\n\nfunction nodeRadius(person: Person) {\n  let count = new Set([...(person?.known ?? new Set()), ...person.knows]).size\n  count = count < 1 ? 1 : count\n  return count ** 0.42 * 5\n}\n\nconst selectNodeDependencies = (\n  selectedNodeUri: string | undefined,\n  graph: PeopleGraph,\n): string[] => {\n  if (!selectedNodeUri) return []\n  return [\n    ...new Set([\n      ...(graph?.[selectedNodeUri]?.knows ?? new Set()),\n      ...(graph?.[selectedNodeUri]?.known ?? new Set()),\n    ]),\n  ]\n}\n\nconst VisualizationContainer: React.FC<RouteComponentProps> = ({\n  location,\n  history,\n  ...props\n}: RouteComponentProps) => {\n  const [simulation] = useState(new Simulation())\n\n  const [layout, setLayout] = useState<SimulationGraph>({\n    nodes: [],\n    links: [],\n  })\n\n  const [search, setSearch] = useState<string>('')\n\n  const [highlightedNode, setHighlightedNode] = useState<string | undefined>()\n\n  const people = useContext(PeopleContext)\n\n  // transformation matrix\n  const [matrix, setMatrix] = useState<number[][]>([\n    [1, 0, 0],\n    [0, 1, 0],\n    [0, 0, 1],\n  ])\n\n  // initialize simulation\n  useEffect(() => {\n    let lastUpdate = Date.now() - 20\n    simulation.start({\n      nodes: [],\n      links: [],\n      onTick: ({ nodes, links }) => {\n        const now = Date.now()\n        if (now > lastUpdate + 20) {\n          setLayout({ nodes: [...nodes], links: [...links] })\n          lastUpdate = now\n        }\n      },\n    })\n    return () => {\n      simulation.stop()\n    }\n  }, [simulation])\n\n  // when graph changes, update simulation\n  useEffect(() => {\n    const nodes = Object.values(people).map(node => ({\n      label: node.name,\n      uri: node.uri,\n      r: nodeRadius(node),\n    }))\n\n    const links = Object.values(people).reduce(\n      (nodes, { uri: source, knows }) => {\n        knows.forEach(target => nodes.push({ source, target }))\n        return nodes\n      },\n      [] as SimulationLink[],\n    )\n\n    simulation.update({ nodes, links })\n  }, [people, simulation])\n\n  const handleTransform = (matrix: number[][]): void => {\n    setMatrix(prevMatrix => numeric.dot(matrix, prevMatrix) as number[][])\n  }\n\n  const withNode = (action: (uri: string) => unknown) => {\n    return (position: Vector): void => {\n      // first transform to local coordinates\n      const [x, y] = transform(numeric.inv(matrix), position)\n      // then find the node in simulation\n      action(simulation.selectNode({ x, y })?.uri)\n    }\n  }\n\n  const handleHover = withNode(setHighlightedNode)\n  const selectNode = (node: IriString) => {\n    const uri = node ? `/${encodeURIComponent(node)}` : '/'\n    if (uri !== history.location.pathname) history.push(uri)\n  }\n  const handleSelect = withNode(selectNode)\n\n  const selectedNode = decodeURIComponent(location.pathname.slice(1))\n\n  const selectedNodeDependencies = selectNodeDependencies(selectedNode, people)\n  // transform layout to TransformedLayout\n  const transformedLayout = transformLayout(\n    matrix,\n    layout,\n    people,\n    highlightedNode,\n    selectedNode,\n    selectedNodeDependencies,\n  )\n\n  const grid = transformGrid(matrix, basicGrid)\n\n  let person\n  let knows: Person[] = []\n  let known: Person[] = []\n\n  if (selectedNode) {\n    person = people[selectedNode]\n    if (person) {\n      knows = [...person.knows].map(f => people[f])\n      known = [...(person?.known ?? new Set())].map(f => people[f])\n    }\n  }\n\n  return (\n    <>\n      <Visualization\n        graph={transformedLayout}\n        grid={grid}\n        onTransform={handleTransform}\n        onHover={handleHover}\n        onSelectNode={handleSelect}\n        {...props}\n      />\n\n      <Helmet>\n        <title>\n          {selectedNode && `${people[selectedNode]?.name || selectedNode} - `}\n          Friend Crawler\n        </title>\n      </Helmet>\n\n      <InfoContainer>\n        {person ? (\n          <PersonCard\n            person={person}\n            knows={knows}\n            known={known}\n            onSelectPerson={selectNode}\n          />\n        ) : (\n          <Search\n            value={search}\n            onChange={setSearch}\n            options={selectSearchOptions(search, people)}\n            onSelect={selectNode}\n          />\n        )}\n      </InfoContainer>\n    </>\n  )\n}\n\nexport default withRouter(VisualizationContainer)\n\nconst selectSearchOptions = (\n  query: string,\n  people: PeopleGraph,\n): { value: string; label: string }[] => {\n  if (query.length < 2) return []\n  return Object.values(people)\n    .filter(\n      ({ name, uri }) =>\n        name.toLowerCase().includes(query.toLowerCase()) ||\n        uri.toLowerCase().includes(query.toLowerCase()),\n    )\n    .sort(({ known: a }, { known: b }) => (b?.size ?? 0) - (a?.size ?? 0))\n    .map(({ name, uri }) => ({ value: uri, label: name || uri }))\n    .slice(0, 10)\n}\n","import React, { useContext } from 'react'\nimport { PeopleContext, Person } from './DataContainer'\n\ninterface Props {\n  people: { [uri: string]: Person }\n}\n\nexport const PeopleList = ({ people, ...props }: Props) => (\n  <div {...props}>\n    <div>total: {Object.keys(people).length}</div>\n    <div>\n      pending:{' '}\n      {\n        Object.values(people).filter(person => person.status === 'pending')\n          .length\n      }\n    </div>\n    <div>\n      success:{' '}\n      {\n        Object.values(people).filter(person => person.status === 'success')\n          .length\n      }\n    </div>\n    <div>\n      error:{' '}\n      {Object.values(people).filter(person => person.status === 'error').length}\n    </div>\n    <div>\n      links:{' '}\n      {\n        Object.values(people)\n          .map(person => Array.from(person.knows))\n          .flat().length\n      }\n    </div>\n  </div>\n)\n\ntype ULProps = Partial<React.HTMLAttributes<HTMLUListElement>>\n\nexport const PeopleListContainer = (props: ULProps) => {\n  const people = useContext(PeopleContext)\n  return <PeopleList people={people} {...props} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Link = styled.a`\n  color: lightgray;\n  &:hover {\n    color: white;\n  }\n`\nconst Footer = styled.footer`\n  color: gray;\n`\n\nconst About: React.FC = props => (\n  <div {...props}>\n    <Footer>\n      powered by <Link href=\"https://solidproject.org\">Solid</Link> &middot;{' '}\n      <Link href=\"https://github.com/mrkvon/friend-crawler\">source</Link>\n    </Footer>\n  </div>\n)\n\nexport default About\n","import React from 'react'\nimport Login from './Login'\nimport VisualizationContainer from './VisualizationContainer'\nimport styled from 'styled-components'\nimport { PeopleListContainer } from './PeopleList'\nimport About from './About'\n\nconst PositionedLogin = styled(Login)`\n  position: fixed;\n  top: 1rem;\n  right: 1rem;\n  display: block;\n`\nconst PositionedAbout = styled(About)`\n  position: fixed;\n  bottom: 1rem;\n  right: 1rem;\n  display: block;\n`\n\nconst PositionedPeopleList = styled(PeopleListContainer)`\n  position: fixed;\n  top: 1rem;\n  left: 1rem;\n  display: block;\n  background-color: white;\n  padding: 0.25rem;\n`\n\nconst FullSizeVisualization = styled(VisualizationContainer)`\n  height: 100vh;\n  width: 100vw;\n  display: block;\n`\n\nconst Layout: React.FC = () => {\n  return (\n    <>\n      <PositionedPeopleList />\n\n      <PositionedLogin />\n\n      <PositionedAbout />\n\n      <FullSizeVisualization />\n    </>\n  )\n}\n\nexport default Layout\n","import React from 'react'\nimport Layout from './components/Layout'\nimport DataContainer from './components/DataContainer'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nconst App: React.FC = () => (\n  <Router>\n    <DataContainer>\n      <Layout />\n    </DataContainer>\n  </Router>\n)\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React, { useState, ReactNode } from 'react'\nimport { SessionContext, SessionInfo } from '../contexts/session'\n\ninterface Props {\n  children: ReactNode\n}\n\nconst SessionProvider: React.FC<Props> = (props: Props) => {\n  const [sessionInfo, setSessionInfo] = useState<SessionInfo | null>(null)\n\n  return (\n    <SessionContext.Provider value={[sessionInfo, setSessionInfo]}>\n      {props.children}\n    </SessionContext.Provider>\n  )\n}\n\nexport default SessionProvider\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport SessionProvider from './components/SessionProvider'\nimport Modal from 'react-modal'\n\nif (typeof document === 'object') {\n  const appElement = document.querySelector('#root') as HTMLElement\n\n  Modal.setAppElement(appElement)\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <SessionProvider>\n      <App />\n    </SessionProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}