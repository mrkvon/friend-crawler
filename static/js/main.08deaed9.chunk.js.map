{"version":3,"sources":["components/Visualization.tsx","contexts/session.ts","components/Login.tsx","helpers/draw.ts","simulation/index.ts","components/PersonCard.tsx","data/BFSFriends.ts","components/DataContainer.tsx","components/VisualizationContainer.tsx","components/PeopleList.tsx","components/About.tsx","components/Layout.tsx","App.tsx","reportWebVitals.ts","components/SessionProvider.tsx","index.tsx"],"names":["old","SessionContext","createContext","Login","className","props","useState","loading","setLoading","useContext","info","setInfo","useEffect","handleIncomingRedirect","url","window","location","href","restorePreviousSession","then","newInfo","catch","e","console","log","finally","handleLogin","a","login","oidcIssuer","redirectUrl","clientName","handleLogout","logout","commonProps","isLoggedIn","onClick","webId","drawText","context","text","options","x","y","font","textBaseline","textAlign","Object","assign","fillText","drawCircle","radius","beginPath","arc","Math","PI","fill","drawLine","start","end","moveTo","lineTo","stroke","Visualization","graph","grid","onTransform","onHover","onSelectNode","canvasEl","useRef","width","height","setVisualizationSize","current","getContext","offset","save","translate","clearRect","strokeStyle","min1","max1","min0","max0","getLineWidth","i","highlight","distance","origin","lineWidth","drawGrid","links","forEach","link","s","source","t","target","v","numeric","sub","size","sqrt","div","add","mul","r","focusedColor","accented","nodes","filter","style","focused","successed","errored","fillStyle","label","restore","updateCanvasSize","elementRef","clientHeight","clientWidth","getElementSize","addEventListener","removeEventListener","select","call","drag","clickDistance","on","dx","dy","zoom","scaleExtent","transform","k","dot","inv","withCanvasPosition","func","rect","getBoundingClientRect","clientX","left","clientY","top","handleMouseMove","handleClick","ref","onMouseMove","onMouseOut","Infinity","classnames","Simulation","runs","simulation","forceSimulation","alphaDecay","force","forceLink","id","node","uri","strength","forceManyBody","distanceMax","forceX","forceY","forceCollide","forceCenter","stop","onTick","map","restart","update","thisNodeDict","fromEntries","updatedNodes","random","alpha","selectNode","find","PersonCard","person","knows","known","onSelectPerson","position","bottom","pointerEvents","overflowY","overflowX","name","photo","src","alt","length","friend","limiter","RateLimiter","tokensPerInterval","interval","fetchWithTimeout","timeout","resource","controller","AbortController","setTimeout","abort","fetch","signal","response","clearTimeout","limitedFetch","removeTokens","findFullPersonProfile","visited","Set","fail","iri","getSolidDataset","dataset","getThing","push","same","getTermAll","owl","sameAs","value","see","rdfs","seeAlso","has","findFriends","data","friends","reduce","d","foaf","concat","indexOf","getTerm","vcard","hasPhoto","img","fixUri","match","begin","BFSFriends","initial","onChange","running","people","values","status","includes","unvisitedPersons","Promise","all","unvisitedPerson","unvisited","newlyFoundFriends","keys","PeopleContext","DataContainer","children","setPeople","timbl","me","Provider","matrix","vector","raw","transpose","basicGrid","nodeRadius","count","withRouter","history","layout","setLayout","highlightedNode","setHighlightedNode","setMatrix","lastUpdate","Date","now","withNode","action","handleHover","encodeURIComponent","pathname","handleSelect","selectedNode","decodeURIComponent","slice","selectedNodeDependencies","selectedNodeUri","Array","from","selectNodeDependencies","transformedLayout","highlighted","selected","selectedDependencies","transformedNodesDict","sourceUri","targetUri","transformLayout","transformGrid","f","prevMatrix","Helmet","PeopleList","flat","Link","styled","Footer","footer","About","PositionedLogin","PositionedAbout","PositionedPeopleList","FullSizeVisualization","VisualizationContainer","Layout","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SessionProvider","sessionInfo","setSessionInfo","document","appElement","querySelector","Modal","setAppElement","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.08deaed9.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport {\n  Vector,\n  Grid,\n  drawGrid,\n  drawCircle,\n  drawLine,\n  drawText,\n} from '../helpers/draw'\nimport classnames from 'classnames'\nimport { drag } from 'd3-drag'\nimport { zoom } from 'd3-zoom'\nimport { select } from 'd3-selection'\nimport numeric from 'numeric'\nimport { VisualizationGraph } from './VisualizationContainer'\n\ntype Props = Partial<React.CanvasHTMLAttributes<HTMLCanvasElement>> & {\n  graph: VisualizationGraph\n  grid: Grid\n  onTransform: (matrix: number[][]) => void\n  onHover: (position: Vector) => void\n  onSelectNode: (position: Vector) => void\n}\n\nlet old: number[][]\n\nconst Visualization: React.FC<Props> = ({\n  graph,\n  grid,\n  onTransform,\n  onHover,\n  onSelectNode,\n  ...props\n}: Props) => {\n  const canvasEl = useRef<HTMLCanvasElement>(null)\n  const [{ width, height }, setVisualizationSize] = useState({\n    width: 0,\n    height: 0,\n  })\n\n  useEffect(() => {\n    if (canvasEl && canvasEl.current) {\n      const context = canvasEl.current.getContext('2d')\n      if (context) {\n        const offset: Vector = [width / 2, height / 2]\n        context.save()\n        context.translate(...offset)\n        context.clearRect(-offset[0], -offset[1], width, height)\n        drawGrid(context, grid, width, height, offset)\n        graph.links.forEach(link => {\n          // we're counting a unit vector to make links that don't overlap nodes\n          // source point\n          const s = [link.source.x, link.source.y]\n          // target point\n          const t = [link.target.x, link.target.y]\n          // vector\n          const v = numeric.sub(t, s)\n          // vector size\n          const size = Math.sqrt(v[0] ** 2 + v[1] ** 2)\n          // unit vector\n          const i = numeric.div(v, size)\n          drawLine(\n            context,\n            // links don't overlap circles\n            numeric.add(s, numeric.mul(i, link.source.r)) as Vector,\n            numeric.sub(t, numeric.mul(i, link.target.r)) as Vector,\n            {\n              strokeStyle: 'white',\n              lineWidth: 0.5,\n            },\n          )\n        })\n\n        const accentedColor = '#78a2ccaa' // '#ff5d'\n        const focusedColor = '#78a2cc'\n        const successedColor = '#7d7a'\n        const erroredColor = '#ff6961aa'\n        const accented = graph.nodes.filter(({ style }) => style === 'accent')\n        const focused = graph.nodes.filter(({ style }) => style === 'focus')\n        const successed = graph.nodes.filter(({ style }) => style === 'success')\n        const errored = graph.nodes.filter(({ style }) => style === 'error')\n        const rest = graph.nodes.filter(({ style }) => !style)\n\n        // draw all the nodes which are not special\n        rest.forEach(({ x, y, r }) =>\n          drawCircle(context, [x, y], r, { fillStyle: '#fff8' }),\n        )\n\n        // draw errored nodes\n        errored.forEach(({ x, y, r }) =>\n          drawCircle(context, [x, y], r, { fillStyle: erroredColor }),\n        )\n\n        // draw successed nodes\n        successed.forEach(({ x, y, r }) =>\n          drawCircle(context, [x, y], r, { fillStyle: successedColor }),\n        )\n\n        /*\n        // draw text of all the above nodes\n        ;[...errored, ...successed, ...rest].forEach(({ x, y, r, label }) =>\n          drawText(context, [x + r + 5, y], label, { fillStyle: '#fff4' }),\n        )\n        */\n\n        // draw accented nodes\n        accented.forEach(({ x, y, r }) =>\n          drawCircle(context, [x, y], r, { fillStyle: accentedColor }),\n        )\n\n        accented.forEach(({ x, y, r, label }) =>\n          drawText(context, [x + r + 5, y], label, {\n            fillStyle: '#fff4',\n          }),\n        )\n\n        // draw focused nodes\n        focused.forEach(({ x, y, r }) =>\n          drawCircle(context, [x, y], r, { fillStyle: focusedColor }),\n        )\n\n        focused.forEach(({ x, y, r, label }) =>\n          drawText(context, [x + r + 5, y], label, { fillStyle: focusedColor }),\n        )\n\n        return () => context.restore()\n      }\n    }\n  }, [width, height, graph, canvasEl, grid])\n\n  useEffect(() => {\n    const updateCanvasSize = () => {\n      if (canvasEl && canvasEl.current) {\n        const size = getElementSize(canvasEl)\n        setVisualizationSize(size)\n      }\n    }\n\n    updateCanvasSize()\n    window.addEventListener('load', updateCanvasSize)\n    window.addEventListener('resize', updateCanvasSize)\n\n    return () => {\n      window.removeEventListener('resize', updateCanvasSize)\n      window.removeEventListener('load', updateCanvasSize)\n    }\n  }, [width, height, canvasEl])\n\n  useEffect(() => {\n    if (canvasEl && canvasEl.current) {\n      select(canvasEl.current).call(\n        drag<HTMLCanvasElement, unknown>()\n          .clickDistance(2)\n          //.on('start', console.log)\n          .on('drag', e => {\n            onTransform([\n              [1, 0, e.dx],\n              [0, 1, e.dy],\n              [0, 0, 1],\n            ])\n          }),\n        //.on('end', console.log),\n      )\n\n      select(canvasEl.current).call(\n        zoom<HTMLCanvasElement, unknown>()\n          .clickDistance(2)\n          .scaleExtent([0.05, 3])\n          .on('zoom', e => {\n            old = old ?? [\n              [1, 0, -width / 2],\n              [0, 1, -height / 2],\n              [0, 0, 1],\n            ]\n            const { x, y, k } = e.transform\n\n            const zoom = [\n              [k, 0, x - width / 2],\n              [0, k, y - height / 2],\n              [0, 0, 1],\n            ]\n\n            const transform = numeric.dot(zoom, numeric.inv(old)) as number[][]\n            old = zoom\n\n            onTransform(transform)\n          }),\n      )\n    }\n  }, [canvasEl, onTransform, height, width])\n\n  const withCanvasPosition =\n    (\n      func: (position: Vector) => void,\n    ): React.MouseEventHandler<HTMLCanvasElement> =>\n    e => {\n      // https://stackoverflow.com/a/42111623\n      if (canvasEl && canvasEl.current) {\n        const rect = canvasEl.current.getBoundingClientRect()\n        const x = e.clientX - rect.left //x position within the element.\n        const y = e.clientY - rect.top //y position within the element.\n        func([x - width / 2, y - height / 2])\n      }\n    }\n\n  const handleMouseMove = withCanvasPosition(onHover)\n  const handleClick = withCanvasPosition(onSelectNode)\n\n  return (\n    <canvas\n      {...props}\n      ref={canvasEl}\n      onMouseMove={handleMouseMove}\n      // @TODO this piece is very inefficient, we search for a nonexistent node, just to unhighlight everything; but it works\n      onMouseOut={() => onHover([Infinity, Infinity])}\n      width={width}\n      height={height}\n      className={classnames(props.className, 'has-background-dark')}\n      onClick={handleClick}\n    />\n  )\n}\n\nexport default Visualization\n\nfunction getElementSize(elementRef: React.RefObject<HTMLCanvasElement>) {\n  if (elementRef && elementRef.current) {\n    const { clientHeight: height, clientWidth: width } = elementRef.current\n    return { height, width }\n  } else return { height: 0, width: 0 }\n}\n","import { ISessionInfo } from '@inrupt/solid-client-authn-browser'\nimport React, { createContext } from 'react'\n\nexport type SessionInfo = Required<ISessionInfo>\nexport const SessionContext = createContext<\n  [SessionInfo | null, React.Dispatch<React.SetStateAction<SessionInfo | null>>]\n>([\n  null,\n  () => {\n    return\n  },\n])\n","import React, { useState, useEffect, useContext } from 'react'\nimport {\n  login,\n  logout,\n  handleIncomingRedirect,\n} from '@inrupt/solid-client-authn-browser'\nimport { SessionContext, SessionInfo } from '../contexts/session'\n\ninterface Props {\n  className?: string\n}\n\nconst Login: React.FC<Props> = (\n  { className, ...props }: Props = { className: '' },\n) => {\n  const [loading, setLoading] = useState(true)\n  const [info, setInfo] = useContext(SessionContext)\n  useEffect(() => {\n    setLoading(true)\n    handleIncomingRedirect({\n      url: window.location.href,\n      restorePreviousSession: true,\n    })\n      .then(newInfo => {\n        if (newInfo) setInfo(newInfo as SessionInfo)\n      })\n      .catch(e => {\n        console.log(e)\n        setInfo(null)\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [setInfo])\n  const handleLogin = async () => {\n    setLoading(true)\n    await login({\n      oidcIssuer: 'https://solidcommunity.net',\n      redirectUrl: window.location.href,\n      clientName: 'Friends Crawler',\n    })\n    setLoading(false)\n  }\n\n  const handleLogout = async () => {\n    setLoading(true)\n    await logout()\n    if (setInfo) setInfo(null)\n    setLoading(false)\n  }\n\n  const commonProps = {\n    ...props,\n    className: `${className} button`,\n  }\n\n  return loading ? (\n    <span {...commonProps}>Loading</span>\n  ) : info?.isLoggedIn ? (\n    <button {...commonProps} onClick={handleLogout}>\n      {info?.webId} Logout\n    </button>\n  ) : (\n    <button {...commonProps} onClick={handleLogin}>\n      Login\n    </button>\n  )\n}\n\nexport default Login\n","export type Vector = [number, number]\n\nexport type Grid = {\n  origin: Vector // coordinate of the origin\n  distance: number // distance between lines\n  highlight: number // which lines should be highlighted\n}\n\ntype Options = Partial<CanvasRenderingContext2D>\n\nexport const drawText = (\n  context: CanvasRenderingContext2D,\n  [x, y]: Vector,\n  text: string,\n  options: Options,\n) => {\n  context.font = '20px Arial'\n  context.textBaseline = 'middle'\n  context.textAlign = 'left'\n  // context.fillStyle = '#fff7'\n  Object.assign(context, options)\n  context.fillText(text, x, y)\n}\n\nexport const drawCircle = (\n  context: CanvasRenderingContext2D,\n  [x, y]: Vector,\n  radius: number,\n  options: Options,\n) => {\n  Object.assign(context, options)\n  context.beginPath()\n  context.arc(x, y, radius, 0, 2 * Math.PI)\n  context.fill()\n}\n\nexport const drawLine = (\n  context: CanvasRenderingContext2D,\n  start: Vector,\n  end: Vector,\n  options: Options,\n) => {\n  Object.assign(context, options)\n\n  context.beginPath()\n  context.moveTo(...start)\n  context.lineTo(...end)\n  context.stroke()\n}\n\nexport const drawGrid = (\n  context: CanvasRenderingContext2D,\n  grid: Grid,\n  width: number,\n  height: number,\n  offset: Vector = [0, 0],\n) => {\n  const strokeStyle = '#fff2'\n  const min1 = -offset[1]\n  const max1 = height - offset[1]\n  const min0 = -offset[0]\n  const max0 = width - offset[0]\n\n  const getLineWidth = (i: number) =>\n    i === 0 ? 2 : i % grid.highlight === 0 ? 1 : 0.5\n\n  let i = 0\n  while (i * grid.distance + grid.origin[0] <= max0) {\n    const x = i * grid.distance + grid.origin[0]\n    if (x >= min0) {\n      drawLine(context, [x, min1], [x, max1], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i++\n  }\n\n  i = -1\n  while (i * grid.distance + grid.origin[0] >= min0) {\n    const x = i * grid.distance + grid.origin[0]\n    if (x <= max0) {\n      drawLine(context, [x, min1], [x, max1], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i--\n  }\n\n  i = 0\n  while (i * grid.distance + grid.origin[1] <= max1) {\n    const y = i * grid.distance + grid.origin[1]\n    if (y >= min1) {\n      drawLine(context, [min0, y], [max0, y], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i++\n  }\n\n  i = -1\n  while (i * grid.distance + grid.origin[1] >= min1) {\n    const y = i * grid.distance + grid.origin[1]\n    if (y <= max1) {\n      drawLine(context, [min0, y], [max0, y], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i--\n  }\n}\n","import {\n  forceSimulation,\n  forceCollide,\n  forceLink,\n  forceManyBody,\n  forceCenter,\n  forceX,\n  forceY,\n  SimulationNodeDatum,\n  SimulationLinkDatum,\n  ForceLink,\n} from 'd3-force'\nimport { Coords, Uri, SimulationNode, SimulationLink, Node } from './types'\n\ninterface SimulationNodeExt extends SimulationNodeDatum {\n  uri: Uri\n  r: number\n}\n\nexport type SimulationLinkExt = SimulationLinkDatum<SimulationNodeExt>\n\nexport default class Simulation {\n  nodes: SimulationNodeExt[] = []\n  links: SimulationLinkExt[] = []\n\n  runs = false\n\n  simulation = forceSimulation()\n    .alphaDecay(0.005)\n    .force(\n      'link',\n      forceLink()\n        .id(node => (node as SimulationNodeExt).uri)\n        .distance(50)\n        .strength(0.1),\n    )\n    .force('charge', forceManyBody().strength(-150).distanceMax(500))\n    .force('gravityX', forceX(0).strength(0.01))\n    .force('gravityY', forceY(0).strength(0.01))\n    .force(\n      'collide',\n      forceCollide(({ r }: SimulationNodeExt) => r + 5),\n    )\n    .force('center', forceCenter(0, 0))\n    .stop()\n\n  start = ({\n    nodes,\n    links,\n    onTick,\n  }: {\n    nodes: SimulationNode[]\n    links: SimulationLink[]\n    onTick: (simulation: {\n      nodes: SimulationNode[]\n      links: SimulationLinkExt[]\n    }) => void\n  }) => {\n    this.nodes = nodes as SimulationNodeExt[]\n    this.links = links.map(link => ({ ...link })) as SimulationLinkExt[]\n\n    this.simulation.nodes(this.nodes)\n    ;(\n      this.simulation.force('link') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n\n    this.simulation.on('tick', () => {\n      onTick({\n        nodes: this.nodes as SimulationNode[],\n        links: this.links,\n      })\n    })\n\n    this.simulation.restart()\n    this.runs = true\n  }\n\n  stop = () => {\n    this.runs = false\n    return this.simulation.stop()\n  }\n\n  update = ({ nodes, links }: { nodes: Node[]; links: SimulationLink[] }) => {\n    this.simulation.stop()\n    // combine current nodes and the old nodes\n    const thisNodeDict: { [uri: string]: SimulationNodeExt } =\n      Object.fromEntries(this.nodes.map(node => [node.uri, node]))\n    const updatedNodes: SimulationNodeExt[] = nodes.map(node => ({\n      ...node,\n      x: Math.random() * 400,\n      y: Math.random() * 400,\n      ...thisNodeDict[node.uri],\n      r: node.r,\n    }))\n    this.nodes = updatedNodes\n    this.links = links.map(link => ({ ...link })) as SimulationLinkExt[]\n\n    this.simulation.nodes(this.nodes)\n    ;(\n      this.simulation.force('link') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n\n    this.simulation.alpha(1).restart()\n  }\n\n  selectNode = ({ x, y }: Coords) =>\n    this.simulation.find(x, y, 40) as SimulationNodeExt\n}\n","import React from 'react'\nimport { Person } from './DataContainer'\n\ninterface Props {\n  person: Person\n  knows: Person[]\n  known: Person[]\n  onSelectPerson: (uri: string) => void\n}\n\nconst PersonCard = ({ person, knows, known, onSelectPerson }: Props) => {\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        width: '100%',\n        top: '0',\n        bottom: 0,\n        pointerEvents: 'none',\n        overflowY: 'auto',\n        overflowX: 'hidden',\n      }}\n    >\n      <div className=\"columns mr-1 mt-6\">\n        <div className=\"column is-one-quarter is-offset-three-quarters\">\n          <div\n            className=\"card\"\n            style={{ pointerEvents: 'all', overflowX: 'auto', width: '100%' }}\n          >\n            <header className=\"card-header\">\n              <a className=\"card-header-title\" href={person.uri}>\n                {person.name || person.uri}\n              </a>\n            </header>\n            {person.photo && (\n              <div className=\"card-image\">\n                <figure className=\"image\">\n                  <img src={person.photo} alt={person.name} />\n                </figure>\n              </div>\n            )}\n            <header className=\"card-header\">\n              <p className=\"card-header-title\">knows: {knows.length}</p>\n            </header>\n            <section className=\"card-content\">\n              <ul className=\"buttons are-small\">\n                {knows.map(friend => (\n                  <li\n                    onClick={() => onSelectPerson(friend.uri)}\n                    key={friend.uri}\n                    className=\"button is-link\"\n                  >\n                    {friend.name}\n                  </li>\n                ))}\n              </ul>\n            </section>\n            <header className=\"card-header\">\n              <p className=\"card-header-title\">known by: {known.length}</p>\n            </header>\n            <section className=\"card-content\">\n              <ul className=\"buttons are-small\">\n                {known.map(friend => (\n                  <li\n                    onClick={() => onSelectPerson(friend.uri)}\n                    key={friend.uri}\n                    className=\"button is-link\"\n                  >\n                    {friend.name}\n                  </li>\n                ))}\n              </ul>\n            </section>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PersonCard\n","import { fetch } from '@inrupt/solid-client-authn-browser'\nimport {\n  getSolidDataset,\n  getTerm,\n  getThing,\n  getTermAll,\n  IriString,\n  SolidDataset,\n} from '@inrupt/solid-client'\nimport { foaf, vcard, owl, rdfs } from 'rdf-namespaces'\nimport { Person } from '../components/DataContainer'\nimport { RateLimiter } from 'limiter'\n\nconst limiter = new RateLimiter({ tokensPerInterval: 1, interval: 50 })\n\n/**\n * https://dmitripavlutin.com/timeout-fetch-request/#2-timeout-a-fetch-request\n */\nconst fetchWithTimeout: (timeout: number) => typeof fetch =\n  (timeout: number) => async (resource, options) => {\n    const controller = new AbortController()\n    const id = setTimeout(() => controller.abort(), timeout)\n\n    const response = await fetch(resource, {\n      ...options,\n      signal: controller.signal,\n    })\n    clearTimeout(id)\n\n    return response\n  }\n\nconst limitedFetch: typeof fetch = async (...props) => {\n  await limiter.removeTokens(1)\n  return await fetchWithTimeout(8000)(...props)\n}\n\ninterface PersonData {\n  name: string\n  friends: IriString[]\n  photo: IriString\n}\n\n/**\n * Fetch all profile documents connected to the webId by owl:sameAs or rdfs.seeAlso\n */\nconst findFullPersonProfile = async (\n  webId: IriString,\n  visited = new Set<IriString>(),\n  response: SolidDataset[] = [],\n  fail = true,\n  iri = webId,\n): Promise<SolidDataset[]> => {\n  try {\n    /* uncomment if it is annoying when the below profile blocks\n    if (webId === 'https://ruben.verborgh.org/profile/#me') {\n      throw new Error('a blocking profile')\n    }\n    // */\n    visited.add(iri)\n    const dataset = await getSolidDataset(iri, { fetch: limitedFetch })\n    const person = getThing(dataset, webId)\n    if (person) {\n      response.push(dataset)\n      const same: string[] = getTermAll(person, owl.sameAs).map(a => a.value)\n      const see: string[] = getTermAll(person, rdfs.seeAlso).map(a => a.value)\n\n      for (const uri of [...same, ...see]) {\n        console.log('extending', uri)\n        if (!visited.has(uri))\n          await findFullPersonProfile(webId, visited, response, false, uri)\n      }\n    }\n  } catch (e) {\n    if (fail) throw e\n  }\n  return response\n}\n\nexport const findFriends = async (webId: IriString): Promise<PersonData> => {\n  const data: PersonData = { name: '', photo: '', friends: [] }\n  if (webId) {\n    const dataset = await findFullPersonProfile(webId)\n    dataset.reduce((data, d) => {\n      const person = getThing(d, webId)\n      if (person) {\n        const friends = getTermAll(person, foaf.knows).map(a => a.value)\n        data.friends = data.friends\n          .concat(friends)\n          .filter((a, i, data) => data.indexOf(a) === i)\n        if (!data.name) data.name = getTerm(person, foaf.name)?.value ?? ''\n        if (!data.photo)\n          data.photo =\n            getTerm(person, vcard.hasPhoto)?.value ??\n            getTerm(person, foaf.img)?.value ??\n            ''\n      }\n      return data\n    }, data)\n    return data\n  }\n\n  return data\n}\n\nexport const BFSFriends = (\n  initial: Person[],\n  onChange: (people: { [uri: string]: Person }) => void,\n): (() => void) => {\n  console.log('start crawling')\n  let running = true\n  let people: { [uri: string]: Person } = Object.fromEntries(\n    initial.map(({ uri, ...person }) => {\n      uri = fixUri(uri)\n      return [uri, { ...person, uri }]\n    }),\n  )\n  onChange(people)\n  ;(async () => {\n    while (\n      running &&\n      Object.values(people)\n        .map(person => person.status)\n        .includes('pending')\n    ) {\n      // take all unvisited persons\n      const unvisitedPersons = Object.values(people).filter(\n        person => person.status === 'pending',\n      )\n      if (unvisitedPersons.length > 0) {\n        await Promise.all(\n          unvisitedPersons.map(async unvisitedPerson => {\n            // fetch their friends\n            try {\n              const { name, photo, friends } = await findFriends(\n                unvisitedPerson.uri,\n              )\n              const unvisited: Person = {\n                ...unvisitedPerson,\n                status: 'success',\n                knows: new Set(friends.map(uri => fixUri(uri))),\n                name,\n                photo,\n              }\n\n              // add their friends\n              const newlyFoundFriends = Object.fromEntries(\n                friends\n                  .map(\n                    uri =>\n                      [\n                        fixUri(uri),\n                        {\n                          status: 'pending',\n                          knows: new Set(),\n                          name: '',\n                          uri: fixUri(uri),\n                        } as Person,\n                      ] as [IriString, Person],\n                  )\n                  .filter(([uri]) => !Object.keys(people).includes(uri)),\n              )\n\n              people = {\n                ...people,\n                ...newlyFoundFriends,\n                [unvisited.uri]: unvisited,\n              }\n            } catch (e) {\n              // set their status to error\n              people = {\n                ...people,\n                [unvisitedPerson.uri]: { ...unvisitedPerson, status: 'error' },\n              }\n            } finally {\n              onChange({ ...people })\n            }\n          }),\n        )\n      } else break\n    }\n  })()\n  return () => {\n    console.log('stop crawling')\n    running = false\n  }\n}\n\n/*\nconst getResourceUrl = (url: string): string => {\n  const resourceUrl = new URL(url)\n  resourceUrl.hash = ''\n  return resourceUrl.href\n}\n*/\n\nconst fixUri = (uri: IriString) => {\n  const regex = /^(.+)\\.solid.community(.*)$/\n  const match = uri.match(regex)\n  if (match) {\n    const [, begin, end] = match\n    uri = `${begin}.solidcommunity.net${end}`\n  }\n\n  return uri\n}\nexport default BFSFriends\n","import React, { createContext, useContext, useState, useEffect } from 'react'\nimport { SessionContext } from '../contexts/session'\nimport BFSFriends from '../data/BFSFriends'\nimport { IriString } from '@inrupt/solid-client'\n\nexport const PeopleContext = createContext<{ [uri: string]: Person }>({})\n\ninterface Props {\n  children: React.ReactNode\n}\n\nexport type Person = {\n  uri: IriString\n  name: string\n  photo: string\n  status: 'success' | 'error' | 'pending'\n  knows: Set<IriString>\n  known?: Set<IriString>\n}\n\nconst DataContainer = ({ children }: Props) => {\n  const [info] = useContext(SessionContext)\n  const [people, setPeople] = useState<{ [uri: string]: Person }>({})\n\n  useEffect(() => {\n    // here we lookup people connected to us\n    const timbl: Person = {\n      uri: 'https://timbl.solidcommunity.net/profile/card#me',\n      name: '',\n      photo: '',\n      status: 'pending',\n      knows: new Set(),\n    }\n\n    const me: Person = {\n      uri: info?.webId ?? '',\n      name: '',\n      status: 'pending',\n      knows: new Set(),\n      photo: '',\n    }\n\n    return BFSFriends([timbl, ...(info?.isLoggedIn ? [me] : [])], setPeople)\n  }, [info])\n\n  Object.values(people).forEach(({ uri, knows }) => {\n    knows.forEach(k => {\n      const person = people[k]\n      person.known = person.known ?? new Set()\n      person.known.add(uri)\n    })\n  })\n\n  return (\n    <PeopleContext.Provider value={people}>{children}</PeopleContext.Provider>\n  )\n}\n\nexport default DataContainer\n","import React, { useEffect, useState, useContext } from 'react'\nimport Visualization from './Visualization'\nimport Simulation, { SimulationLinkExt } from '../simulation'\nimport { SimulationNode, SimulationLink } from '../simulation/types'\nimport { Vector } from '../helpers/draw'\nimport { Grid } from '../helpers/draw'\nimport numeric from 'numeric'\nimport PersonCard from './PersonCard'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { PeopleContext, Person } from './DataContainer'\nimport { IriString } from '@inrupt/solid-client'\nimport { Helmet } from 'react-helmet'\n\ntype PeopleGraph = {\n  [uri: string]: Person\n}\n\nconst transform = (matrix: number[][], vector: Vector): Vector => {\n  const raw = numeric.dot(\n    matrix,\n    numeric.transpose([[...vector, 1]]),\n  ) as number[][]\n  const [[x], [y]] = raw\n  return [x, y]\n}\n\ntype VisualizationNode = {\n  x: number\n  y: number\n  uri: string\n  label: string\n  style: string\n  r: number\n}\n\ntype VisualizationLink = {\n  source: VisualizationNode\n  target: VisualizationNode\n}\n\nexport type VisualizationGraph = {\n  nodes: VisualizationNode[]\n  links: VisualizationLink[]\n}\n\ninterface SimulationGraph {\n  nodes: SimulationNode[]\n  links: SimulationLinkExt[]\n}\n\nconst basicGrid: Grid = {\n  origin: [0, 0],\n  distance: 20,\n  highlight: 5,\n}\n\nconst transformGrid = (matrix: number[][], grid: Grid): Grid => {\n  let distance = grid.distance * matrix[0][0]\n  while (distance < 20) {\n    distance *= 5\n  }\n  return {\n    origin: transform(matrix, grid.origin),\n    distance,\n    highlight: grid.highlight,\n  }\n}\n\nconst transformLayout = (\n  matrix: number[][],\n  graph: SimulationGraph,\n  people: PeopleGraph,\n  highlighted: string | undefined,\n  selected: string | undefined,\n  selectedDependencies: string[],\n): VisualizationGraph => {\n  const transformedNodesDict = Object.fromEntries(\n    graph.nodes.map(node => {\n      const [x, y] = transform(matrix, [node.x, node.y])\n      const r = matrix[0][0] * node.r\n      const status = people[node.uri]?.status ?? ''\n      const style =\n        status === 'success' ? 'success' : status === 'error' ? 'error' : ''\n      return [\n        node.uri,\n        {\n          ...node,\n          x,\n          y,\n          r,\n          style,\n          label: people[node.uri]?.name ?? '',\n        },\n      ]\n    }),\n  )\n\n  if (highlighted && transformedNodesDict[highlighted]) {\n    transformedNodesDict[highlighted].style = 'accent'\n  }\n\n  selectedDependencies.forEach(uri => {\n    if (transformedNodesDict[uri]) transformedNodesDict[uri].style = 'accent'\n  })\n\n  if (selected && transformedNodesDict[selected]) {\n    transformedNodesDict[selected].style = 'focus'\n  }\n\n  const links = graph.links.map(link => {\n    const sourceUri =\n      typeof link.source === 'string'\n        ? link.source\n        : typeof link.source === 'number'\n        ? graph.nodes[link.source].uri\n        : link.source.uri\n    const targetUri =\n      typeof link.target === 'string'\n        ? link.target\n        : typeof link.target === 'number'\n        ? graph.nodes[link.target].uri\n        : link.target.uri\n    const source = transformedNodesDict[sourceUri]\n    const target = transformedNodesDict[targetUri]\n    return { source, target }\n  })\n\n  return { nodes: Object.values(transformedNodesDict), links }\n}\n\nfunction nodeRadius(person: Person) {\n  let count = person.known?.size ?? 0\n  count = count < 1 ? 1 : count\n  return count ** 0.42 * 5\n}\n\nconst selectNodeDependencies = (\n  selectedNodeUri: string | undefined,\n  graph: PeopleGraph,\n): string[] => {\n  if (!selectedNodeUri) return []\n  return Array.from(graph?.[selectedNodeUri]?.knows ?? new Set())\n}\n\nconst VisualizationContainer: React.FC<RouteComponentProps> = ({\n  location,\n  history,\n  ...props\n}: RouteComponentProps) => {\n  const [simulation] = useState(new Simulation())\n\n  const [layout, setLayout] = useState<SimulationGraph>({\n    nodes: [],\n    links: [],\n  })\n\n  const [highlightedNode, setHighlightedNode] = useState<string | undefined>()\n\n  const people = useContext(PeopleContext)\n\n  // transformation matrix\n  const [matrix, setMatrix] = useState<number[][]>([\n    [1, 0, 0],\n    [0, 1, 0],\n    [0, 0, 1],\n  ])\n\n  // initialize simulation\n  useEffect(() => {\n    let lastUpdate = Date.now() - 20\n    simulation.start({\n      nodes: [],\n      links: [],\n      onTick: ({ nodes, links }) => {\n        const now = Date.now()\n        if (now > lastUpdate + 20) {\n          setLayout({ nodes: [...nodes], links: [...links] })\n          lastUpdate = now\n        }\n      },\n    })\n    return () => {\n      simulation.stop()\n    }\n  }, [simulation])\n\n  // when graph changes, update simulation\n  useEffect(() => {\n    const nodes = Object.values(people).map(node => ({\n      label: node.name,\n      uri: node.uri,\n      r: nodeRadius(node),\n    }))\n\n    const links = Object.values(people).reduce(\n      (nodes, { uri: source, knows }) => {\n        knows.forEach(target => nodes.push({ source, target }))\n        return nodes\n      },\n      [] as SimulationLink[],\n    )\n\n    simulation.update({ nodes, links })\n  }, [people, simulation])\n\n  const handleTransform = (matrix: number[][]): void => {\n    setMatrix(prevMatrix => numeric.dot(matrix, prevMatrix) as number[][])\n  }\n\n  const withNode = (action: (uri: string) => unknown) => {\n    return (position: Vector): void => {\n      // first transform to local coordinates\n      const [x, y] = transform(numeric.inv(matrix), position)\n      // then find the node in simulation\n      action(simulation.selectNode({ x, y })?.uri)\n    }\n  }\n\n  const handleHover = withNode(setHighlightedNode)\n  const selectNode = (node: IriString) => {\n    const uri = node ? `/${encodeURIComponent(node)}` : '/'\n    if (uri !== history.location.pathname) history.push(uri)\n  }\n  const handleSelect = withNode(selectNode)\n\n  const selectedNode = decodeURIComponent(location.pathname.slice(1))\n\n  const selectedNodeDependencies = selectNodeDependencies(selectedNode, people)\n  // transform layout to TransformedLayout\n  const transformedLayout = transformLayout(\n    matrix,\n    layout,\n    people,\n    highlightedNode,\n    selectedNode,\n    selectedNodeDependencies,\n  )\n\n  const grid = transformGrid(matrix, basicGrid)\n\n  let person, knows, known\n\n  if (selectedNode) {\n    person = people[selectedNode]\n    if (person) {\n      knows = Array.from(person.knows).map(f => people[f])\n      if (person.known) {\n        known = Array.from(person.known).map(f => people[f])\n      }\n    }\n  }\n\n  return (\n    <>\n      <Visualization\n        graph={transformedLayout}\n        grid={grid}\n        onTransform={handleTransform}\n        onHover={handleHover}\n        onSelectNode={handleSelect}\n        {...props}\n      />\n\n      <Helmet>\n        <title>\n          {selectedNode && `${people[selectedNode]?.name || selectedNode} - `}\n          Friend Crawler\n        </title>\n      </Helmet>\n\n      {person && knows && known && (\n        <PersonCard\n          person={person}\n          knows={knows}\n          known={known}\n          onSelectPerson={selectNode}\n        />\n      )}\n    </>\n  )\n}\n\nexport default withRouter(VisualizationContainer)\n","import React, { useContext } from 'react'\nimport { PeopleContext, Person } from './DataContainer'\n\ninterface Props {\n  people: { [uri: string]: Person }\n}\n\nexport const PeopleList = ({ people, ...props }: Props) => (\n  <div {...props}>\n    <div>total: {Object.keys(people).length}</div>\n    <div>\n      pending:{' '}\n      {\n        Object.values(people).filter(person => person.status === 'pending')\n          .length\n      }\n    </div>\n    <div>\n      success:{' '}\n      {\n        Object.values(people).filter(person => person.status === 'success')\n          .length\n      }\n    </div>\n    <div>\n      error:{' '}\n      {Object.values(people).filter(person => person.status === 'error').length}\n    </div>\n    <div>\n      links:{' '}\n      {\n        Object.values(people)\n          .map(person => Array.from(person.knows))\n          .flat().length\n      }\n    </div>\n  </div>\n)\n\ntype ULProps = Partial<React.HTMLAttributes<HTMLUListElement>>\n\nexport const PeopleListContainer = (props: ULProps) => {\n  const people = useContext(PeopleContext)\n  return <PeopleList people={people} {...props} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Link = styled.a`\n  color: lightgray;\n  &:hover {\n    color: white;\n  }\n`\nconst Footer = styled.footer`\n  color: gray;\n`\n\nconst About: React.FC = props => (\n  <div {...props}>\n    <Footer>\n      powered by <Link href=\"https://solidproject.org\">Solid</Link> &middot;{' '}\n      <Link href=\"https://github.com/mrkvon/friend-crawler\">source</Link>\n    </Footer>\n  </div>\n)\n\nexport default About\n","import React from 'react'\nimport Login from './Login'\nimport VisualizationContainer from './VisualizationContainer'\nimport styled from 'styled-components'\nimport { PeopleListContainer } from './PeopleList'\nimport About from './About'\n\nconst PositionedLogin = styled(Login)`\n  position: fixed;\n  top: 1rem;\n  right: 1rem;\n  display: block;\n`\nconst PositionedAbout = styled(About)`\n  position: fixed;\n  bottom: 1rem;\n  right: 1rem;\n  display: block;\n`\n\nconst PositionedPeopleList = styled(PeopleListContainer)`\n  position: fixed;\n  top: 1rem;\n  left: 1rem;\n  display: block;\n  background-color: white;\n  padding: 0.25rem;\n`\n\nconst FullSizeVisualization = styled(VisualizationContainer)`\n  height: 100vh;\n  width: 100vw;\n  display: block;\n`\n\nconst Layout: React.FC = () => {\n  return (\n    <>\n      <PositionedPeopleList />\n\n      <PositionedLogin />\n\n      <PositionedAbout />\n\n      <FullSizeVisualization />\n    </>\n  )\n}\n\nexport default Layout\n","import React from 'react'\nimport Layout from './components/Layout'\nimport DataContainer from './components/DataContainer'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nconst App: React.FC = () => (\n  <Router>\n    <DataContainer>\n      <Layout />\n    </DataContainer>\n  </Router>\n)\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React, { useState, ReactNode } from 'react'\nimport { SessionContext, SessionInfo } from '../contexts/session'\n\ninterface Props {\n  children: ReactNode\n}\n\nconst SessionProvider: React.FC<Props> = (props: Props) => {\n  const [sessionInfo, setSessionInfo] = useState<SessionInfo | null>(null)\n\n  return (\n    <SessionContext.Provider value={[sessionInfo, setSessionInfo]}>\n      {props.children}\n    </SessionContext.Provider>\n  )\n}\n\nexport default SessionProvider\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport SessionProvider from './components/SessionProvider'\nimport Modal from 'react-modal'\n\nif (typeof document === 'object') {\n  const appElement = document.querySelector('#root') as HTMLElement\n\n  Modal.setAppElement(appElement)\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <SessionProvider>\n      <App />\n    </SessionProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}